{
	"info": {
		"_postman_id": "814c252d-c0c0-4bf0-aef9-aa2757f7de73",
		"name": "HomeWork_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!ss\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Check the name in the response to eql the name in request\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Rushan\");\r",
							"})\r",
							"pm.test(\"The age in the response to eql the age in the request\", function () {\r",
							"    pm.expect(jsonData.age).to.eql('35');\r",
							"})\r",
							"pm.test(\"The salary in the response to eql the salary in the request\", function() {\r",
							"    pm.expect(jsonData.salary).to.eql(700)\r",
							"})\r",
							"var req_body = request.data;\r",
							"pm.test(\"The name in the response to eql the name in the requestParse\", function () { pm.expect(jsonData.name).to.eql(req_body.name);});\r",
							"pm.test(\"Check the age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(req_body.age);\r",
							"})\r",
							"pm.test(\"Check the salary\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(+req_body.salary);\r",
							"})\r",
							"console.log(jsonData[\"family\"])\r",
							"pm.test(\"check that u_salary_1_5_year to eql salary*4\", function () {\r",
							"    pm.expect(jsonData.family.u_salary_1_5_year).to.eql(req_body.salary*4);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Rushan",
							"type": "default"
						},
						{
							"key": "age",
							"value": "35",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "700",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"const jsonData = pm.response.json();\r",
							"\r",
							"const reqURL = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"Check Name in response to eql Name in request\", function() {\r",
							"    pm.expect(jsonData.name).to.eql(reqURL.name);\r",
							"})\r",
							"pm.test(\"Check age\", function() {\r",
							"    pm.expect(jsonData.age).to.eql(reqURL.age);\r",
							"})\r",
							"pm.test(\"Check salary\", function() {\r",
							"    pm.expect(jsonData.salary).to.eql(+reqURL.salary);\r",
							"})\r",
							"console.log(jsonData.family)\r",
							"\r",
							"pm.test(\"Check that the DOG in the response to have the property NAME\", function() {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"name\");\r",
							"})\r",
							"pm.test(\"Check the DOG in the response to have the property AGE\", function(){\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"age\");\r",
							"})\r",
							"pm.test(\"Check DOG'S NAME is Luky\", function(){\r",
							"    pm.expect(jsonData.family.pets.dog.name).to.eql(\"Luky\");\r",
							"})\r",
							"pm.test(\"Check DOG'S AGE is 4\", function(){\r",
							"    pm.expect(jsonData.family.pets.dog.age).to.eql(4);\r",
							"})\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Rushan&age=35&salary=700",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Rushan"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "700"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"const jsonData = pm.response.json();\r",
							"const reqURL = pm.request.url.query.toObject();\r",
							"pm.test(\"Check name\", function(){\r",
							"    pm.expect(jsonData.name).to.eql(reqURL.name);\r",
							"})\r",
							"pm.test(\"Check age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(+reqURL.age);\r",
							"})\r",
							"console.log(reqURL.salary)\r",
							"console.log(jsonData.salary)\r",
							"console.log(jsonData.salary[0])\r",
							"console.log(jsonData.salary[1])\r",
							"console.log(jsonData.salary[2])\r",
							"\r",
							"pm.test(\"Check salary to eql salary[0]\", function () {\r",
							"    pm.expect(jsonData.salary[0]).to.eql(Number(reqURL.salary));\r",
							"})\r",
							"pm.test(\"Check salary to eql salary[1]\", function(){\r",
							"    pm.expect(jsonData.salary[1]).to.eql(String(reqURL.salary*2))\r",
							"})\r",
							"pm.test(\"Check salary to eql salary[2]\", function() {\r",
							"    pm.expect(Number(jsonData.salary[2])).to.eql(reqURL.salary*3);\r",
							"})\r",
							"pm.environment.set(\"name\", jsonData.name);\r",
							"pm.environment.set(\"age\", jsonData.age);\r",
							"pm.environment.set(\"salary\", jsonData.salary[0]);\r",
							"\r",
							"\r",
							"pm.test(\"Check Array salary\", function(){\r",
							"a = 0;\r",
							"while(jsonData.salary.length > a){\r",
							"    console.log(jsonData.salary[a] +' элемент номер ' + a);\r",
							"    a++;\r",
							"}\r",
							"});\r",
							"for(i=0;i<jsonData.salary.length;i++){\r",
							"    console.log(jsonData.salary[i])\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Rushan&age=35&salary=700",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Rushan"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "700"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"const jsonData = pm.response.json();\r",
							"const reqData = request.data;\r",
							"pm.test(\"Check response to have parametr start_qa_salary\", function (){\r",
							"    pm.expect(jsonData).to.have.property(\"start_qa_salary\");\r",
							"})\r",
							"pm.test(\"Check response to have parametr qa_salary_after_6_months\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_6_months\");\r",
							"})\r",
							"pm.test(\"Check response to have parametr qa_salary_after_12_months\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_12_months\");\r",
							"})\r",
							"pm.test(\"Check response to have parametr qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"})\r",
							"pm.test(\"Check response to have parametr qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"})\r",
							"pm.test(\"Check response to have parametr person\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"person\");\r",
							"})\r",
							"pm.test(\"Check that parametr qa_salary_after_6_months to eql salary*2 from request \", function () {pm.expect(jsonData.qa_salary_after_6_months).to.eql(reqData.salary*2);\r",
							"});\r",
							"pm.test(\"Check that parametr qa_salary_after_12_months to eql salary*2.7 from request \", function () {pm.expect(jsonData.qa_salary_after_12_months).to.eql(reqData.salary*2.7);});\r",
							"pm.test(\"Check that parametr qa_salary_after_1.5_year to eql salary*3.3 from request \", function () {pm.expect(jsonData['qa_salary_after_1.5_year']).to.eql(reqData.salary*3.3);});\r",
							"pm.test(\"Check that parametr qa_salary_after_3.5_years to eql salary*3.8 from request \", function () {pm.expect(jsonData['qa_salary_after_3.5_years']).to.eql(reqData.salary*3.8);});\r",
							"pm.test(\"Check that 1-element from u_name to eql salary from request\", function () {\r",
							"    pm.expect(jsonData.person.u_name[1]).to.eql(Number(reqData.salary));\r",
							"})\r",
							"pm.test(\"Check that  u_age to eql age from request\", function () {\r",
							"    pm.expect(jsonData.person.u_age).to.eql(Number(reqData.age));\r",
							"})\r",
							"pm.test(\"Check that  u_salary_5_years to eql salary*4.2 from request\", function () {\r",
							"    pm.expect(jsonData.person.u_salary_5_years).to.eql(reqData.salary*4.2);\r",
							"})\r",
							"for(i=0; i< jsonData.person.u_name.length; i++) {\r",
							"    console.log(jsonData.person.u_name[i])\r",
							"}\r",
							"for (var i of Object.values(jsonData.person)){\r",
							"    console.log(i)\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name ",
							"value": "{{name}}",
							"type": "default"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}