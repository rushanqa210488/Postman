{
	"info": {
		"_postman_id": "475ca358-bcf8-4720-a0ce-bc94530dcc4a",
		"name": "HomeWork_3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"jsonData = pm.response.json();\r",
							"token_1 = jsonData.token;\r",
							"pm.environment.set(\"token\", token_1);\r",
							"\r",
							"var schema = {\r",
							"    \"items\": {\r",
							"        \"type\": \"boolean\"\r",
							"    }\r",
							"};\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "rushan@mail.ru",
							"type": "default"
						},
						{
							"key": "password",
							"value": "qatester",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/login",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"pm.test(\"Check jsonSchema\", function () {\r",
							"    pm.response.to.have.jsonSchema({\"type\": \"object\"})\r",
							"})\r",
							"\r",
							"pm.test(\"Check start_qa_salary is 600  \", function() {\r",
							"    pm.expect(jsonData.start_qa_salary).to.eql(600);\r",
							"})\r",
							"pm.test(\"Check qa_salary_after_6_months is 600 * 2  \", function() {\r",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.eql(600*2);\r",
							"})\r",
							"pm.test(\"Check qa_salary_after_12_months is 600 * 2.9 \", function() {\r",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.eql(600*2.9);\r",
							"})\r",
							"const u_salary_1_5_year  = jsonData['person']['u_salary_1_5_year'];\r",
							"pm.environment.set(\"salary_1_5\", u_salary_1_5_year)\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"age\": 35,\r\n    \"salary\": 600,\r\n    \"name\": \"Rushan\",\r\n    \"auth_token\": \"{{token}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const JsonData = pm.response.json();\r",
							"const reqData = request.data;\r",
							"console.log(reqData)\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"pm.test(\"Check jsonSchema\", function (){\r",
							"    pm.response.to.have.jsonSchema({\"type\": \"object\"});\r",
							"});\r",
							"pm.test(\"Check that salary to eql salary from request\", function () {\r",
							"    pm.expect(JsonData.salary[0]).to.eql(800)\r",
							"})\r",
							"pm.test(\"Check that salary to eql salary*2 from request\", function () {\r",
							"    pm.expect(JsonData.salary[1]).to.eql(String(800*2))\r",
							"})\r",
							"pm.test(\"Check that salary to eql salary*3 from request\", function () {\r",
							"    pm.expect(JsonData.salary[2]).to.eql(String(800*3))\r",
							"})\r",
							"pm.test(\"Check that 2-elementSalary more than 1-element\", function () {\r",
							"    pm.expect(Number(JsonData.salary[1])).to.be.below(Number(JsonData.salary[2]));\r",
							"})\r",
							"pm.test(\"Check that 2-elementSalary more than 0-element\", function () {\r",
							"    pm.expect(Number(JsonData.salary[0])).to.be.below(Number(JsonData.salary[2]));\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "35",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "800",
							"type": "default"
						},
						{
							"key": "name",
							"value": "Rushan",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/new_data",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"const reqData = request.data;\r",
							"pm.test(\"Status code is 200\", function (){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Check jsonShcema\", function(){\r",
							"    pm.response.to.have.jsonSchema({\"type\": \"object\"});\r",
							"});\r",
							"pm.test(\"Check the result of multiplication daily-food\", function () {\r",
							"    pm.expect(jsonData.daily_food).to.eql(reqData.weight* 0.012);\r",
							"});\r",
							"pm.test(\"Check the result of multiplication daily_sleep\", function(){\r",
							"    pm.expect(jsonData.daily_sleep).to.eql(reqData.weight*2.5);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "35",
							"type": "default"
						},
						{
							"key": "weight",
							"value": "86",
							"type": "default"
						},
						{
							"key": "name",
							"value": "Rushan",
							"type": "default"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/test_pet_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"const reqData = request.data;\r",
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Check jsonSchema\", function() {\r",
							"    pm.response.to.have.jsonSchema({\"type\": \"object\"});\r",
							"});\r",
							"pm.test(\"Ckeck name from response to eql name from environment\", function(){\r",
							"    pm.expect(jsonData['name']).to.eql(environment.name)\r",
							"})\r",
							"pm.test(\"Check Age from response to eql Age from request\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(reqData.age);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "35",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "{{salary_1_5}}",
							"type": "default"
						},
						{
							"key": "name",
							"value": "Rushan",
							"type": "default"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/get_test_user",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "currency",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"const randNum = Math.floor(Math.random() * (jsonData.length))\r",
							"console.log(jsonData[randNum].Cur_ID)\r",
							"pm.environment.set(\"cur_id\", jsonData[randNum].Cur_ID)\r",
							"\r",
							"\r",
							"\r",
							"for(i=0; i<jsonData.length; i++){\r",
							"    const postRequest = {\r",
							"        url:'http://54.157.99.22:80/curr_byn',\r",
							"        method : 'POST',\r",
							"        body:{\r",
							"            mode: 'formdata',\r",
							"            formdata:[\r",
							"                {key:\"auth_token\", value:pm.environment.get(\"token\"),},\r",
							"                {key:\"curr_code\",value:String(jsonData[i].Cur_ID)}\r",
							"            ]\r",
							"        }\r",
							"    };\r",
							"    pm.sendRequest(postRequest, function(err, response){\r",
							"        if (response.code==500){\r",
							"            console.log(err)\r",
							"        } else if(response.code==200){\r",
							"            if(pm.test(\"test\", function(){\r",
							"                pm.expect(response.json()).to.have.property(\"Cur_ID\")\r",
							"            })){\r",
							"                console.log(response.json())}         \r",
							"            \r",
							"    }\r",
							"})}\r",
							"            \r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://54.157.99.22:80/currency",
					"protocol": "http",
					"host": [
						"54",
						"157",
						"99",
						"22"
					],
					"port": "80",
					"path": [
						"currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "curr_byn",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Check jsonSchema\", function () {\r",
							"    pm.response.to.have.jsonSchema({\"type\": \"object\"});\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "default"
						},
						{
							"key": "curr_code",
							"value": "{{cur_id}}",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://54.157.99.22:80/curr_byn",
					"protocol": "http",
					"host": [
						"54",
						"157",
						"99",
						"22"
					],
					"port": "80",
					"path": [
						"curr_byn"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}